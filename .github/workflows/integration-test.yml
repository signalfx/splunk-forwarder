name: Integration Test

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:

env:
  PYTHON_VERSION: "3.8"
  SLIM_VERSION: "1.0.1"
  APPINSPECT_VERSION: "2.15.0"
  REQUIREMENTS_PATH: "tests/requirements.txt"

jobs:
  pylint:
    name: pylint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pytest
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: v1-pytest--${{ env.PYTHON_VERSION }}-${{ hashFiles(env.REQUIREMENTS_PATH) }}

      - name: Install pytest
        run: pip install -r ${{ env.REQUIREMENTS_PATH }}

      - name: Run pylint
        run: pylint signalfx-forwarder-app/bin --ignore lib

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache slim
        uses: actions/cache@v2
        with:
          path: /tmp/slim/slim.tar.gz
          key: v2-slim-${{ env.SLIM_VERSION }}-${{ env.PYTHON_VERSION }}

      - name: Install slim
        run: |
          if [ ! -f /tmp/slim/slim.tar.gz ]; then
            mkdir -p /tmp/slim
            curl -sSLf http://download.splunk.com/misc/packaging-toolkit/splunk-packaging-toolkit-${{ env.SLIM_VERSION }}.tar.gz -o /tmp/slim/slim.tar.gz
          fi
          pip install /tmp/slim/slim.tar.gz

      - name: Run slim
        run: |
          mkdir -p dist
          slim package --output ./dist/ ./signalfx-forwarder-app

      - name: Save package
        uses: actions/upload-artifact@v2
        with:
          name: signalfx-forwarder-app
          path: ./dist/signalfx-forwarder-app-*.tar.gz

  appinspect:
    name: appinspect
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache appinspect
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: v1-appinspect-${{ env.APPINSPECT_VERSION }}-${{ env.PYTHON_VERSION }}

      - name: Install appinspect
        run: pip install splunk-appinspect==${{ env.APPINSPECT_VERSION }}

      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: signalfx-forwarder-app
          path: ./dist

      - name: Run appinspect
        run: |
          mkdir -p testresults
          splunk-appinspect inspect dist/signalfx-forwarder-app-*.tar.gz --mode=precert --data-format junitxml --output-file testresults/results.xml
          grep -q '<testsuite.*errors="0"' testresults/results.xml || exit 1
          grep -q '<testsuite.*failures="0"' testresults/results.xml || exit 1

  integration-test:
    name: integration-test
    runs-on: ubuntu-latest
    needs:
     - build
    strategy:
      matrix:
        SPLUNK_VERSION: [ "6.5.0", "7.0.0", "8.0", "8.1", "8.2" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pytest
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: v1-pytest--${{ env.PYTHON_VERSION }}-${{ hashFiles(env.REQUIREMENTS_PATH) }}

      - name: Install pytest
        run: pip install -r ${{ env.REQUIREMENTS_PATH }}

      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: signalfx-forwarder-app
          path: ./dist

      - name: Run tests
        run: |
          mv dist/signalfx-forwarder-app*.tar.gz .
          mkdir -p testresults
          mkdir -p /tmp/scratch
          SPLUNK_VERSIONS=${{ matrix.SPLUNK_VERSION }} pytest --verbose --junitxml=~/testresults/results.xml --html=~/testresults/results.html --self-contained-html tests/splunk_test.py

      - name: Save test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ~/testresults
